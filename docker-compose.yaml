services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: "./backend/example.env"
    networks:
      - pwnd-network
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file: "backend/example.env"
    networks:
      - pwnd-network

  redis:
    image: redis:latest
    networks:
      - pwnd-network

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/01_init.sql
      - ./db/import.sql:/docker-entrypoint-initdb.d/02_import.sql
    networks:
      - pwnd-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres -h localhost -p 5432"]
      interval: 10s
      retries: 15 
      timeout: 5s
      start_period: 0s

  ollama:
    image: ollama/ollama:latest
    environment:
      - OLLAMA_API_PORT=11434
      - OLLAMA_API_HOST=localhost
    volumes:
      - ollama_data:/ollama
    networks:
      - pwnd-network
      
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - pwnd-network

volumes:
  postgres_data:
    driver: local
  ollama_data:
     driver: local
networks:
  pwnd-network:
    driver: bridge
